2001-06-14  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/NEWS:
	- Wrote a new NEWS file for 0.0.4

	* /cvsroot/ggz/ggz-client-libs/ggz-client-libs.spec:
	- Bump version to 0.0.4

	* /cvsroot/ggz/ggz-client-libs/configure.in, /cvsroot/ggz/ggz-client-libs/NEWS, /cvsroot/ggz/ggz-client-libs/QuickStart.GGZ, /cvsroot/ggz/ggz-client-libs/README.GGZ, /cvsroot/ggz/ggz-client-libs/INSTALL, /cvsroot/ggz/ggz-client-libs/Makefile.am:
	- Updated docs
	- Bump version to 0.0.4
	- Include docs in dist

2001-06-02  dr_maux  <dr_maux@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/configure.in:
	- find new easysock version

2001-06-02  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/state.c:
	- When a table leave fails, transition from LEAVING_TABLE back to
	  AT_TABLE, rather than IN_ROOM

2001-05-30  dr_maux  <dr_maux@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/debian/postinst, /cvsroot/ggz/ggz-client-libs/debian/preinst:
	- suppress warnings

	* /cvsroot/ggz/ggz-client-libs/debian/conffiles, /cvsroot/ggz/ggz-client-libs/debian/postinst, /cvsroot/ggz/ggz-client-libs/debian/preinst:
	- handle ggz.module file better
	- new policy is: preserve if existing on install;
		preserve if existing on remove;
		remove on purge

	* /cvsroot/ggz/ggz-client-libs/debian/changelog, /cvsroot/ggz/ggz-client-libs/debian/control, /cvsroot/ggz/ggz-client-libs/debian/copyright, /cvsroot/ggz/ggz-client-libs/debian/.cvsignore, /cvsroot/ggz/ggz-client-libs/debian/docs, /cvsroot/ggz/ggz-client-libs/debian/postinst, /cvsroot/ggz/ggz-client-libs/debian/prerm, /cvsroot/ggz/ggz-client-libs/debian/README.Debian, /cvsroot/ggz/ggz-client-libs/debian/rules, /cvsroot/ggz/ggz-client-libs/debian/shlibs:
	- debianized source tree

2001-05-28  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/configure.in, /cvsroot/ggz/ggz-client-libs/Makefile.am, /cvsroot/ggz/ggz-client-libs/man/.cvsignore, /cvsroot/ggz/ggz-client-libs/man/Makefile.am:
	- man pages are now installed
	- man pages included in distribution package

	* /cvsroot/ggz/ggz-client-libs/configure.in, /cvsroot/ggz/ggz-client-libs/man/.cvsignore, /cvsroot/ggz/ggz-client-libs/man/ggz.modules.5.in:
	- Added man page for ggz.modules configuration file

2001-05-25  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/module.c:
	- Implement _ggzcore_module_get_num_by_type() and
	  _ggzcore_module_get_nth_by_type().  They may not be the most
	  efficient, but they work for now

2001-05-22  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/man/.cvsignore:
	- Ignore fact that ggz-config.6 isn't in CVS

	* /cvsroot/ggz/ggz-client-libs/configure.in, /cvsroot/ggz/ggz-client-libs/man/ggz-config.6.in:
	- Added man page for ggz-config(6)

2001-05-20  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/README:
	- Rewrote README file as a summary/introduction rather than rehashing the
	  info already in README.GGZ

	* /cvsroot/ggz/ggz-client-libs/README.GGZ:
	- Added additional documentation for ggz-config

	* /cvsroot/ggz/ggz-client-libs/README, /cvsroot/ggz/ggz-client-libs/README.GGZ:
	- Moved full README file to README.GGZ
	- Keep only ggz-client-libs info in README

2001-05-01  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/README:
	- Draft README file - complete instructions on installing the client,
	  including easysock, ggz-client-libs, clients and games.

2001-04-24  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Rename target for ggz.module from sysconf_DATA to ggzconf_DATA:
	  * in case we ever make it a subdir, this keeps it in the right place
	  * as an added benefit, 'make install-exec' will not overwrite the
	    ggz.modules file now.

	* /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Free old handle and password before replacing with new ones:
	- Fixes a memory leak

2001-04-24  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Applied Riq's patch for Freeciv compatibility

2001-04-23  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/lists.c:
	- Eliminated memory leak when overwriting a list node with a new value

2001-04-14  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c:
	- Check server state before proceeding with a launch, join, or leave

2001-04-08  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/game.c, /cvsroot/ggz/ggz/src/ggzcore/module.c:
	- Added stubs for ggzcore_game_join(), _ggzcore_game_join(), and
	  ggzcore_module_add()

2001-04-07  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Handle E_LEAVE_FORBIDDEN error
	- Corrected default leave error (uses to say "launch error")
	- Don't send a room change request if we aren't in state LOGGED_IN or
	  IN_ROOM
	- Added default error handlre for login failures
	- Added default error handlre for room join failures
	- Handle E_ROOM_FULL error

2001-03-28  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/ggz-client-libs.spec:
	- Fixed RPM spec files to properly install shared libs

	* /cvsroot/ggz/ggz-client-libs/configure.in, /cvsroot/ggz/ggz-client-libs/ggz-client-libs.spec:
	- Corrected package name (ggzcore is only a part of ggz-client-libs)
	- Added ggz-client-libs.spec RPM specifications

	* /cvsroot/ggz/ggz-client-libs/HACKING, /cvsroot/ggz/ggz-client-libs/TODO:
	- Copied HACKING and TODO over from old ggz sources

2001-03-27  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz-client-libs/configure.in:
	- Depend on easysock 0.2.X

	* /cvsroot/ggz/ggz-client-libs/acconfig.h, /cvsroot/ggz/ggz-client-libs/AUTHORS, /cvsroot/ggz/ggz-client-libs/autogen.sh, /cvsroot/ggz/ggz-client-libs/ChangeLog, /cvsroot/ggz/ggz-client-libs/configure.in, /cvsroot/ggz/ggz-client-libs/COPYING, /cvsroot/ggz/ggz-client-libs/.cvsignore, /cvsroot/ggz/ggz-client-libs/INSTALL, /cvsroot/ggz/ggz-client-libs/Makefile.am, /cvsroot/ggz/ggz-client-libs/NEWS, /cvsroot/ggz/ggz-client-libs/README, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Added necessary autoconf/automake files
	- Changed ggzcore's Makefile.am to remove the extra EASYSOCK variables
	  since they will now be included in $LDADD

2001-03-20  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/game.c, /cvsroot/ggz/ggz/src/ggzcore/game.h, /cvsroot/ggz/ggz/src/ggzcore/module.c:
	- Wrote _ggzcore_game_dead() to handle dead game module processes so
	  we don't get zombies
	- Setup signal handler for SIGCHLD in _ggzcore_module_setup()

2001-03-17  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c:
	- Added --datadir argument to query GGZDATADIR

2001-03-17  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/.cvsignore, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Converted libggzcore into a libtool shared library
	- Converted the included libeasysock into a non-installed libtool
	  convenience library
	- Various Makefile changes to support the above

	* /cvsroot/ggz/ggz/src/ggzcore/game.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/module.c, /cvsroot/ggz/ggz/src/ggzcore/module.h:
	- Removed GGZModule.path in favor of GGZModule.argv, allowing us to
	  store a complete command line in case some modules require specific
	  arguments
	- Read in GGZModule.argv from "CommandLine" in the ggz.modules file

2001-03-17  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/confio.c:
	- Have read_list use calloc to allocate the pointer list so they are NULL

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c: - ExecPath -> CommandLine

2001-03-16  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c:
	- In ggzcore_room_join_table(), don't compare the table ID with the
	  number of table in the room.  This comparison is meaningless.  This
	  should fix the "can't join tables other than 0" bug Justin found
	- Handle E_NO_TABLE error condition
	- Handle unknown table error conditions

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/state.c:
	- New functions _ggzcore_server_set_table_{launching, joining, leaving}()
	  so that the room can notify the server of these events.   There
	  should be a better way to do this....
	- Have the room tell the server every time the table status changes
	- Move table related events to the room since they're really room
	  specific, not server specific

2001-03-15  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- 'make dist' fixes:
	- Mark ggz.modules as EXTRA_DIST so it gets distributed
	- net.c should #include <easysock.h>, not "easysock.h"

	* /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Call _ggzcore_net_error() from inside most functions in net.c.
	  _ggzcore_net_error() will then call _ggzcore_server_net_error()

	* /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h:
	- New stub server functions for setting status of room_join,
	  table_launch, join, and leave
	- Call _ggzcore_server_set_room_join_status() from net.c
	- Do room monitoring shift in _ggzcore_server_set_room()

	* /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h:
	- New function _ggzcore_server_set_login_status()
	- Call _ggzcore_server_set_login_status() from GGZNet handlers for
	  the various login types

	* /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Make all _ggzcore_net_read_XXX() functions take a GGZNet object as
	  their first parameter, not a fd
	- New function _ggzcore_server_set_negotiate_status()
	- Call _ggzcore_server_set_negotiate_status() with result of
	  MSG_SERVER_ID rather than performing actions from net.c

2001-03-14  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/confio.c:
	- confio now uses ggzcore_malloc where possible and appears leak free (yea sure)

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c:
	- All calls to ggz-config should use the '-D' option
	- ggz-config now uses -D to make it build the config file in $DESTDIR

2001-03-11  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c, /cvsroot/ggz/ggz/src/ggzcore/module.c:
	- Changed [Games]->GameList varname to *GameList* so that it is "always"
	  the first varaible under the [Games] heading

	* /cvsroot/ggz/ggz/src/ggzcore/ggz.modules: - Blank ggz.modules file

	* /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Added uninstall ability to game package
	- A blank ggz.modules file is now installed and uninstalled with ggzcore
	  so that installations can occur w/o a preexisting modules file

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c: ggz-config:
	- Accept module name from the fromfile so --modname is not necessary
	- Look in section [ModuleInfo] for information in the fromfile

	chinese-checkers:
	- Makefile.am - --modname no longer necessary
	- ccheckers.dsc - changed section id to [ModuleInfo] and added Name= param

2001-03-10  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/game.c:
	- Bit of hackery to look for modules relative to GAMEDIR if the
	  specified path isn't absolute

	* /cvsroot/ggz/ggz/src/ggzcore/game.c:
	- Check for existence of hook list before adding/removing hooks.  This
	  prevents segfaults if the FE tries to add callbacks to an
	  uninitiallized game.  In particular, this solves the "segfault if
	  module can't be fond problem"

	* /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Support for normal logins and first-time logins
	- Store first-time login password in server so FE can retrieve it

2001-03-09  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c:
	- Check for the players existence before trying to add or remove them
	  from a table.  This fixes the segfault bug when a player manages to
	  leave a room before leaving the game (which only happens if you
	  disconnect during a spades game right now)

	* /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/room.c:
	- Cleaned up the _ggzcore_net_send_XXX() functions to do netowrk error
	  detection and call _ggzcore_net_error().
	- Removed the middle man and let GGZRoom functions call
	  ggzcore_net_send_XXX() functions directly
	- Eliminated unnecessary middle-man GGZServer functions

	* /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- updated TODO

2001-03-08  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h:
	- Removed deprecated ggzcore_server_get_XXX_name() functions
	- Made room_num argument to ggzcore_server_join_room() an unsigned int
	- Added internal versions of the server "get" functions
	- New _ggzcore_server_load_{motd,roomlist,typelist}() functions
	- New _ggzcore_net_error() function to handle network errors.
	  Currently it disconnects, sets the fd to -1, and calls
	  _ggzcore_server_net_error() with an error message
	- Start doing network error detection in net.c rather than in server.c

	* /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Call ggzcore_net_send_XXX() functions with a pointer to the GGZNet
	  object, rather than a fd
	- Removed all references to fd, host, and port from server.c
	- New function _ggzcore_net_data_is_pending()

	* /cvsroot/ggz/ggz/src/ggzcore/game.c:
	- Fixed misplaced parentheses in _ggzcore_game-launch().  We want to
	  allocate strlen(name) + 12, not strlen(name + 12)  Oops.  This will
	  some segfaults occuring at the end of a game of exit

	* /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/protocol.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Moved a huge chunk of code (all of the opcode handlers) from
	  server.c to net.c.  This leaves server.c to handle the higher level
	  session management while letting net.c and the new GGZNet object
	  deal with the client-server communication issues
	- Made all of the _ggzcore_net_read_XXX() functions static since
	  they're now solely used inside net.c
	- Moved the gametype_verose, room_verbose, and new_room attributes
	  from GGZServer to GGZNet since they're really protocol properties
	- Made a bunch of server functions non-static temporarily so that they
	  can be called from net.c until we figure out a better interface

	* /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Beginnings of new GGZNet object to handle network IO:
	- Added functions _ggzcore_net_new(), init(), connect(), free()

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/gametype.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h:
	- Added functions for getting maximum allowed players/bots from a game
	  type
	- Added functions for checking whether a particular number of
	  players/bots is valid

2001-03-06  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h:
	- Small code cleanup on room functions

	* /cvsroot/ggz/ggz/src/ggzcore/game.c, /cvsroot/ggz/ggz/src/ggzcore/game.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/table.c:
	- Finally implemented table launching and leaving
	- Lots of new functions for shuffling game data around
	- New functions for sending and receiving {REQ|RSP}_TABLE_*

2001-03-04  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/lists.c:
	- Fixed mem leak - entry structures were not being deallocated

2001-03-04  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/table.c:
	- Split out table adding code in server.c into function
	  _ggzcore_server_handle_table()
	- Assign gametype to NULL if we haven't loaded the type list
	- If a player or table event comes in before we've loaded the lists,
	  create new ones
	- Check for existence of player and table lists before modifying
	- for loop in table_init to set seats to OPEN goes from 0 to
	  num_seats, not 0 to 0 :)

2001-03-03  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/table.c, /cvsroot/ggz/ggz/src/ggzcore/table.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- New object GGZSeat contains seat type and player name
	- Re-implemented GGZTable object to contain seat information
	- Implemented table updates:
	- Split out net functions for reading table updates
	- Wrote server function to handle table update opcode
	- Wrote room functions to perform table update functions
	- Wrote table functions for modifying GGZTable object
	- Wrote player function for setting table in GGZPlayer
	- Probably more stuff I don't remember :)

2001-03-03  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c:
	- Added --fromfile to load game parameters from a .dsc file

2001-03-02  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Updated TODO list

	* /cvsroot/ggz/ggz/src/ggzcore/game.c, /cvsroot/ggz/ggz/src/ggzcore/game.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/module.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h:
	- New functions:
	 ggzcore_game_data_is+pending()
	 ggzcore_game_read_data()
	 ggzcore_game_write_data()
	 and correspoinding internal funcs
	- Initialize game.fd to -1 in ggzcore_game_init()
	- New GGZGameEvents
	- Send out GGZ_GAME_LAUNCH_FAIL event if the launch fails
	- New GGZServer events for table launch/join success and failure
	- New state GGZ_STATE_LAUNCHING_TABLE
	- New GGZTransitions for launching, joining, and leaving a table

2001-03-01  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/game.c, /cvsroot/ggz/ggz/src/ggzcore/game.h, /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/gametype.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/module.c, /cvsroot/ggz/ggz/src/ggzcore/module.h, /cvsroot/ggz/ggz/src/ggzcore/msg.c:
	- Added files game.[ch] to handle GGZGame object for managing game
	  processes
	- First stab at ggzcore API for handling games (still incomplete, but
	  you can execute a game now)
	- Removed ggzcore_module_get_by_name() and replaced it with
	  ggzcore_module_get_num_by_type() and
	  ggzcore_module_get_nth_by_type()
	- Added GGZ_DBG_GAME debugging level

2001-02-27  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c:
	- --install option functional with new ggz.modules format

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c:
	- Modified --remove functionality to work with correct ggz.modules format
	- *** --install is NOT converted and will not work right yet

2001-02-26  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/memory.c:
	- Added ggzcore_strdup() - logs error on NULL ptr and returns NULL
	- Reworked routines a bit to eliminate zeroing and then recopying over memory

2001-02-24  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c:
	- In ggzcore_room_add_player(), use a dynamically allocated GGZPlayer
	  and not a local var since the list now uses the pointer it's passed
	  instead of copying it.

2001-02-24  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/memory.c:
	- Added ggzcore_realloc() function to reallocate memory

2001-02-24  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h:
	- New function _ggzcore_server_clear() to clear object members
	- New function ggzcore_server_reset() to reset GGZServer to initial
	  state
	- Moved initialization of GGZServer (connection info) off to
	  ggzcore_server_set_hostinfo() and ggzcore_server_set_logininfo().
	  This allows for the possibility of trying to login again if the
	- something goes wrong the first time (eg. bad password).

	* /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Initialize name and msg to NULL in _ggzcore_server_handle_chat() so
	  that we don't end up trying to free() them later

2001-02-22  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- New functions _ggzcore_server_{net,protocol}_error() to handle
	  network errors and errors where the server does something we can't
	  account for.  In both cases we disconnect
	- Check for network and protocol errors all over server.c
	- New event GGZ_CHAT_FAIL for chat failures
	- Re-implemented _ggzcore_handle_rsp_chat() to send GGZ_CHAT_FAIL on
	  failures

	* /cvsroot/ggz/ggz/src/ggzcore/hook.c:
	- Use ggzcore_malloc and ggzcore_free in hook functions

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Got rid of old event.* files

2001-02-21  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h:
	- Pulled definition of GGZRoom and GGZServer into respective .c file
	  since they're supposed to be "closed" anyway
	- Static constants _ggzcore_num_events store an array of strings
	  representing the events
	- Get rid of GGZ_NUM_XXX_EVENTS by using sizeof() magic

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/module.c, /cvsroot/ggz/ggz/src/ggzcore/module.h, /cvsroot/ggz/ggz/src/ggzcore/msg.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- First stab at a GGZModule implementation:
	- Reads in module data from ggz.modules
	- No launch capabilities yet

	* /cvsroot/ggz/ggz/src/ggzcore/.cvsignore:
	- Added .libs dir
	- Added executable ggz-config

	* /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Use ggzcore_malloc and ggzcore_free for roomlist and gamelist

	* /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Use ggzcore_malloc and ggzcore_free for GGZServer

	* /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Cleaned up ggzcore_room functions to separate new() and init()
	- Use ggzcore_malloc and ggzcore_free

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/gametype.h, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Clean up gametype functions
	- Use ggzcore_malloc and ggzcore_free

	* /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/table.c, /cvsroot/ggz/ggz/src/ggzcore/table.h:
	- New functions _ggzcore_table_{new|free} for allocating and freeing
	  GGZTable objects
	- Made table list utility functions non-static
	- Use ggzcore_{malloc, free} for alloacting player and table objects
	- Removed unnecessary _ggzcore_{player|table}_list_new() functions

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/table.c, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Re-added ggzcore_table_get_num() to ggzcore.h at least for now since
	  FEs need some way of numbering tables and I'm not sure if giving
	  them the index in the room is a good idea wince it can change
	- New functions _ggzcore_player_{new|free}() to allocate and free
	  GGZPlayer objects
	- Keep a pointer to the current room in each player structure
	- Make player list utility functions public so that other code can
	  make lists of players
	- New function _ggzcore_room_get_table_by_id()
	- When creating a list of players in the room, don't use the
	  ggzcore_player_create list utlity function: just create a new player
	  and let the list use that pointer
	- Do some NULL-checking befoe strdup'ing

2001-02-20  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c:
	- Removed 'conffile' option, force usage of 'ggz.modules'

2001-02-20  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/gametype.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Removed ggzcore_room_get_num() and ggzcore_gametype_get_num
	  functions because they didn't really do what you would expect
	- Renamed _ggzcore_{room|gametype}_get_num to XXX_get_id() since what
	  we're really returning there is the server's ID for that
	  room/gametype
	- Changed ggzcore_room_get_gametype() to return a pointer to the
	  GGZGameType object corresponding to the game played in that room or
	  NULL if the list of gametypes hasn't been loaded yet.

	* /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h:
	- Reimplement server's room list as an array, not a ggzcore_list

2001-02-20  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggz-config.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Added a first stab at a ggz-config utility

2001-02-19  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- In ggzcore_server_get_nth_room(), initialize pointer to the head of
	  the list.  This increases out chances of actually finding the room
	  and fixed justin's segfault

2001-02-19  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h:
	- Fixed typo ggzcore_server_get_nth_gametpe -> ggzcore_server_get_nth_gametype

2001-02-19  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Added ggzcore_server_get_nth_gametype() function
	- #if 0'd some unused gametype functions

2001-02-18  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Better abstracted room list code (will allow for different
	  implementations in the future)

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/gametype.c:
	- Handle RSP_LIST_TYPES and store gametype info
	- New functions ggzcore_gametype_get_XXX() for getting at gametype
	  info

2001-02-17  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/gametype.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/table.c, /cvsroot/ggz/ggz/src/ggzcore/table.h:
	- Implemented table lists
	- New room event GGZ_TABLE_LIST
	- IMplemented GGZTable functions for init and getting data

2001-02-17  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/memory.c:
	- Fixed bug in _ggzcore_memory_check which made it always claim no leaks

	* /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/memory.c:
	- Added _ggzcore_memory_check()
	- Added call to check memory at cleanup time

2001-02-17  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- In GGZPlayer, store a pointer to the table we're at, not an index
	- Get table pointer when adding players to room list

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Fixed bug in _ggzcore_net_read_motd() where the motd wasn't getting
	  passed back correctly
	- renamed ggzcore_server_get_room() to ggzcore_server_get_nth_room()
	- Added ggzcore_room_get_nth_player()
	- Added ggzcore_player_get_name()
	- Stub functions for ggzcore_room_get_nth_table() and
	  ggzcore_player_get_table()

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/user.c, /cvsroot/ggz/ggz/src/ggzcore/user.h:
	- Provide ggzcore_server_motd() to allow FEs to explicitly request
	  the MOTD
	- Provide ggzcore_server_list_types()
	- Provide ggzcore_room_list_tables()
	- Implement stubs to read in RSP_LIST_{TYPES, TABLES}
	- Finally wipe out old event system

2001-02-16  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h:
	- Added GGZ_DBG_MEMORY and GGZ_DBG_MEMDETAIL so ggzcore will compile
	  :)

	* /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- In ggzcore_server_free(), only call _ggzcore_room_free() if room is
	  not NULL

2001-02-16  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/lists.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/memory.c, /cvsroot/ggz/ggz/src/ggzcore/memory.h, /cvsroot/ggz/ggz/src/ggzcore/msg.c:
	- Initial checkin of memory management functions

2001-02-16  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Wrote player list and player update handling for GGZRoom object
	- Removed old player list system

2001-02-15  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/lists.c, /cvsroot/ggz/ggz/src/ggzcore/lists.h:
	- New function _ggzcore_list_search_alt()

2001-02-15  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h:
	- Removed reference to now-defunct roomlist.h
	- Added #include "list.h" in room.c and server.c

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/roomlist.c, /cvsroot/ggz/ggz/src/ggzcore/roomlist.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/table.c, /cvsroot/ggz/ggz/src/ggzcore/table.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- New object GGZRoom replaces GGZRoomInfo
	- GGZServer now manages list of GGZRoom objects directly (no more
	  GGZRoomList type)
	- GGZServer stores and returns pointers to GGZRoom objects for current room
	- Moved ggzcore_server_get_room_{name|desc|gametype} functions over to
	  ggzcore_room_get_XXX functions
	- New function ggzcore_server_get_room() for getting pointer to a room
	  by index
	- Made chat events specific to room object
	- Moved ggzcore_server_chat() over to ggzcore_room_chat()
	- Moved GGZPlayer and GGZTable structures into respective .h files in
	  anticipation of each room maintaining player and table lists

2001-02-06  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/protocol.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Temporary hack to enable chatting until GGZRoom is implemented:
	- Function ggzcore_server_chat()

2001-01-31  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h:
	- Removed state-specific hooklist and make state-changed a GGZServer
	  event (GGZ_STATE_CHANGE)

2001-01-27  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/roomlist.c, /cvsroot/ggz/ggz/src/ggzcore/roomlist.h, /cvsroot/ggz/ggz/src/ggzcore/TODO:
	- Oops! Forgot to add roomlist.[ch]

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/lists.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Big Phase 1 ggzcore changes:
	- Creation of GGZServer object
	- Moved most events to be GGZServer specific (rest go to GGZRoom)
	- Eliminated all of the server callbacks -- they were useless anyway
	- Made most user actions a function call, not an event
	- Don't fudge the connect/login distinction, let the FE do it.
	- Hacks to event.c and state.c to work with this system, they'll be
	  going away soon anyway

2001-01-22  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c, /cvsroot/ggz/ggz/src/ggzcore/confio.c, /cvsroot/ggz/ggz/src/ggzcore/confio.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h:
	confio.[ch]
	ggzcore.h
	- Made necessary ggzcore_confio functions public
	- ggzcore_confio_parse() now takes an options argument
	- confio files can be "read-only" (GGZ_CONFIO_RDONLY)
	- confio files can be auto-created if they don't exist (GGZ_CONFIO_CREATE)
	- Read the API documentation in ggzcore.h for details

	conf.c
	- Updated ggzcore_conf_initialize() to use the confio_parse options

2001-01-20  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c, /cvsroot/ggz/ggz/src/ggzcore/confio.c, /cvsroot/ggz/ggz/src/ggzcore/confio.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h:
	- A healthy does of const sprinkled throught....

	* /cvsroot/ggz/ggz/src/ggzcore/init.c:
	- Removed reference to non-existent module.h

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/hook.c, /cvsroot/ggz/ggz/src/ggzcore/hook.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/msg.c, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Change states based on specific state-change inputs, rather than
	  events
	- Give each event a list of valid states
	- Rename callback to hook
	- Let hooks return a value to signify removal or error conditions

2001-01-14  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c:
	- Fixed comment/debug entries regarding ggzcore_conf_initialize()

2001-01-13  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c, /cvsroot/ggz/ggz/src/ggzcore/conf.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c:
	- Made ggzcore_conf_initialize() an exported function
	- Don't call ggzcore_conf_initialize() from ggzcore_init() (let FE do it)
	- Remove global and local conf paths from options structure
	- Added debug level and debug file to options structure

2001-01-06  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/profile.c, /cvsroot/ggz/ggz/src/ggzcore/profile.h:
	- Removed unnecessary files

	* /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h:
	- Reorganzied state functions into exported, internal, and static

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h:
	- Eliminated bogus GGZ_STATE_NONE state
	- Made transitions part of states not events
	- New function _ggzcore_state_event_is_valid() to check if event is
	  valid given current state
	- New function _ggzcore_state_transition() is the now the correct way to
	  change states

2000-12-22  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c:
	- Displaying the game information in the launch dialog

2000-12-20  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/table.c:
	- Added lookup to get gametype from room
	- Added lookup to get gametype from table
	- Initilize the gametype linked list (whoops!)
	- Finished the table info dialog

	* /cvsroot/ggz/ggz/src/ggzcore/gametype.c, /cvsroot/ggz/ggz/src/ggzcore/gametype.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/table.c:
	- ggzcore now recieves and stores game type information on login
	y

2000-12-19  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Fixed a minnor bug, where when leaveing a table, the player was shown as
	  still being at the table.

2000-12-18  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/table.c:
	- Forgot a file for the new table code

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/table.h:
	- Added support for displaying and updating table information

2000-12-05  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/player.c:
	- added a int ggzcore_player_get_table(char *name) function to get a player's
	  table based on the players name.

2000-12-05  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/confio.c:
	- Missed a ++ when copying src->dst in _ggzcore_confio_write_list()

2000-12-02  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c:
	- Removed debugging info from make_path()

	* /cvsroot/ggz/ggz/src/ggzcore/msg.c:
	- Initiailize message buffer with \0 if DEBUG is not enabled (and
	  therfore the pid doesn't get printed to the buffer)

2000-12-02  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/confio.c:
	- fixed a NULL termination bug in read_list() - g_strndup() NULL terminates,
	  strncpy() doesn't so we have to do it manually in this version

2000-12-02  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c:
	- s/malloc/calloc in make_path() so the memory gets zeroed out
	  initially
	- In make_path() treat last node in path as a file (not a dir) and
	  ignore it

2000-12-02  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c:
	- make_path() ripped from server for config file path generation
	- gtk FE user config file set to "~/.ggz/ggz.rc"

2000-12-02  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c:
	- Removed reference to local conf file (we decided we didn't need it)
	- Added prototypes for ggzcore_module functions

2000-12-01  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/init.c:
	- Hooked up the config file initailization and destruction functions

2000-12-01  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/conf.c, /cvsroot/ggz/ggz/src/ggzcore/conf.h, /cvsroot/ggz/ggz/src/ggzcore/confio.c, /cvsroot/ggz/ggz/src/ggzcore/confio.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Makefile.am modified to include conf.c, conf.h
	- confio.c, confio.h - modified read_list to return an integer
	- Initial checkin of conf.c, conf.h - frontend level configuration routines
	- ggzcore.h - Added specs and prototypes for config file routines

2000-11-30  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/confio.c, /cvsroot/ggz/ggz/src/ggzcore/confio.h, /cvsroot/ggz/ggz/src/ggzcore/lists.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Initial checkin of confio configuration file functions
	- Fixed a warning in lists.c
	- Modified Makefile.am to compile confio module

2000-11-11  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- New function ggzcore_room_get_desc() to get room description
	- Default to requesting verbose room lists

2000-11-11  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Fixed a little bug of mine. The client won't lockup with incorrect passwords
	  now.

	* /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- You can now login as a registered user

2000-11-10  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h:
	- Add the ability to attach callbacks to state transitions via
	  ggzcore_state_add_callback()

2000-11-05  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/hook.c, /cvsroot/ggz/ggz/src/ggzcore/hook.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- New files hook.[ch] provide mechanism for list of hook functions
	  (ie. callbacks)
	- Rewrote event system to use new hook mechanism
	- For every event, store a list of state transition pairs (current
	  state, next state)
	- Do event validity checking by checking transition pairs
	- Pull out code to dequeue event and put it in _ggzcore_event_dequeue()
	- Rename ggzcore_event_connect() to ggzcore_event_add_callback()
	- Do event validity checking and state transitions from
	  ggzcore_event_process() rather than inside individual callbacks
	- Rename ggzcore_event_trigger() to ggzcore_event_enqueue() to better
	  reflect what it's actually doing
	- Rename GGZEventFunc type to GGZCallback since it will eventually be
	  used for things other than the event system
	- New state GGZ_STATE_BETWEEN_ROOMS
	- To send user login info, re-enqueue GGZ_USER_LOGIN event when we
	  receive GGZ_SERVER_CONNECT
	- Remove unneeded _ggzcore_state_event_isvalid() function
	- In _ggzcore_user_login(), detect whether we're online already and
	  behave appropriately

2000-11-02  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c:
	- Fixed ggzcore_event_remove()

2000-10-18  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Ignore EINTR error while poll()'ing sine it just means we caught
	  some signal

	* /cvsroot/ggz/ggz/src/ggzcore/state.c:
	- Mark GGZ_USER_MOTD as a valid event where appropriate

2000-10-16  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Added GGZ_USER_MOTD event
	- Send REQ_MOTD to server on GGZ_USER_MOTD

2000-10-14  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- When checking for net input, check for POLLHUP so we don't get an
	  error trying to read an opcode from a closed socket
	- Don't disconnect if we're already in state 0:  There's no point

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- New function ggzcore_event_poll() works as a replacement for poll()
	  except it tacks on the ggzcore fds and handles them automatically.
	  This function can easily be used in FE event loops
	- Remove ggzcore_event_ispending()
	- Rename _ggzcore_event_ispending_actual() to ggzcore_event_ispending()
	- Don't check for net input in ggzcore_event_ispending()
	- New functions ggzcore_event_get_fd() and ggzcore_net_get_fd() allow
	  access to ggzcore fds in case FE needs to add them to event loop
	- Use ggzcore_event_poll() in text and gtk frontends
	- remove ggz_loop() from gtk FE

2000-10-12  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Bunch of autoconf/automake changes to accomodate easysock detection
	  and build it internally if not found

2000-10-08  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Use dynamcially allocated memory for GGZ_SERVER_ROOM_{ENTER, LEAVE}
	  events

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/server.c:
	- Added ggzcore functions to return room and player names
	- Actually list player and room names when user issues command

2000-10-07  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Fixed the missnaming of an event I commited last night.

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Added join and part events
	- Display join and part messages

2000-10-06  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/state.c:
	- Fixed state_is_XXX() functions

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/room.c:
	- Correct logic on _ggzcore_room_compare() Return 0 if equal, doh!
	- New exported function ggzcore_room_get_name()
	- Display room name in status if in a room and list had been gotten

	* /cvsroot/ggz/ggz/src/ggzcore/room.c, /cvsroot/ggz/ggz/src/ggzcore/room.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/player.h:
	- Added code for handling room list

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/player.c, /cvsroot/ggz/ggz/src/ggzcore/player.h, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Added ggzcore_state_get_id() function so frontends can access
	  current state ID
	- Move GGZStateID enum from state.h to ggzcore.h
	- Added player-list handling code
	- Support REQ/RSP_LIST_PLAYERS

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/event.c:
	- Added GGZ_SERVER_MOTD event
	- Pass array of motd lines as event data to MOTD event

2000-10-05  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/state.c:
	- Added functions to get at current profile name, login, host, and
	  room
	- Use those on the client status line

	* /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Pass room number to GGZ_USER_ROOM_JOIN as a tyecasted int

	* /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Collapsed user chat handlers into single function with flag passed
	  to callback

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- New commands /msg and /beep
	- New events GGZ_USER_CHAT_PRVMSG and GGZ_USER_CHAT_BEEP
	- Don't bother initializing NULL pointers in GGZEvent structure
	- Check for ID mismatch when initializing events
	- Allow new GGZ_USER_CHAT_XXX events from GGZ_STATE_IN_ROOM

2000-10-05  jzaun  <jzaun@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c:
	- Chat now works with all subop codes

2000-10-03  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/protocol.h:
	- Made enums for update subops and seat values
	- Stub+ handlers for MSG_UPDATE_PLAYERS and MSG_UPDATE_TABLES
	  (No events triggered yet, but this prevents the client from crashing
	  when someone enters/leaves the room or launches a table)

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/protocol.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Renamed GGZ_EVENT_LOGIN_OK to GGZ_EVENT_LOGIN
	- Renamed GGZ_EVENT_CHAT_STATUS to GGZ_EVENT_CHAT
	- New event GGZ_EVENT_ROOM_JOIN_FAIL
	- New event GGZ_EVENT_CHAT_FAIL
	- New event GGZ_SERVER_ERROR
	- New event GGZ_NET_ERROR
	- Trigger network error event from easysock error handler
	- Move global socket variable out of state var
	- New function ggzcore_event_remove_func() to delete specific callback
	- Keep track of state
	- Better handling of error messages from server
	- Do simple user event validity checking based on state
	- Have client handle GGZ_CONNECT_FAIL

2000-09-30  Rich Gade  <rgade@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/lists.c, /cvsroot/ggz/ggz/src/ggzcore/lists.h, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am:
	- Added list handling module to ggzcore

2000-09-29  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/protocol.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Abstracted messages from server into a datatype with the opcode, the
	  name as a string and a pointer to the handler
	- Added events for listing rooms, joining a room and basic chatting
	- Added code to support the added events
	- Make chat protocol subops an enum
	- Added "list", "join", and "chat" commands to text frontend to take
	  advantage of newly added events

	* /cvsroot/ggz/ggz/src/ggzcore/easysock.c, /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/msg.c, /cvsroot/ggz/ggz/src/ggzcore/msg.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c:
	- Send "Lookup failure" as message when gethostbyname() fails since it
	  doesn't set errno
	- Allow callers to set a "destroy" function for freeing callback and
	  event data
	- Fix static functions to follow _ggzcore naming convention
	- Implemented debug levels
	- Created ggzcore_event_connect_full() which allows to caller to
	  specify all paramenters.
	- Have ggzcore_event_connect() supply NULL for user data and destroy
	  func
	- Rename g_e_pending() to g_e_ispending() to signify the return of a
	  true/false value
	- Move actual event checking into g_e_ispending_actual()
	- Don't continue event processing unless actual events are pending,
	  not just network events.  This only affects non-multi-threaded I/O
	  (which is everything right now)
	- Don't pass data over event pipe, just pass pointer.  This avoids
	  unnecessary internal copying and having to pass the size of the
	  event data
	- New GGZOptions structure for passing options to ggzcore library.
	- Accept option for a "local" override conf file in addition to global
	  and user ones.  This allows for easier debugging
	- New event: GGZ_SERVER_LOGOUT
	- Added code to handle RSP_LOGIN_ANON, RSP_LOGOUT, and a dummy handler
	  for MSG_MOTD
	- Added code to handle REQ_LOGIN_*, REQ_LOGOUT
	- On failure, pass error string as GGZ_SERVER_CONNECT data
	- Don't copy profile name if it doesn't exist

2000-09-23  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/easysock.c, /cvsroot/ggz/ggz/src/ggzcore/easysock.h, /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/msg.c, /cvsroot/ggz/ggz/src/ggzcore/msg.h, /cvsroot/ggz/ggz/src/ggzcore/net.c, /cvsroot/ggz/ggz/src/ggzcore/net.h, /cvsroot/ggz/ggz/src/ggzcore/profile.c, /cvsroot/ggz/ggz/src/ggzcore/profile.h, /cvsroot/ggz/ggz/src/ggzcore/protocol.h, /cvsroot/ggz/ggz/src/ggzcore/server.c, /cvsroot/ggz/ggz/src/ggzcore/server.h, /cvsroot/ggz/ggz/src/ggzcore/state.c, /cvsroot/ggz/ggz/src/ggzcore/state.h, /cvsroot/ggz/ggz/src/ggzcore/user.c, /cvsroot/ggz/ggz/src/ggzcore/user.h:
	- Use naming conventions discussed at meeting
	- Added GGZ_SERVER_CONNECT event
	- Only use 1 event for all user login requests
	- Check for pending net events as well as app events (not necessary
	  when threaded)
	- Read event data in event_process() not event_process_all()
	- Added GGZProfile structure for holding server/usr profiles
	- Added server.[ch] for handling server events
	- Imported easysock source
	- Added net.[ch] for handling network I/O
	- Added profile.[ch] for manipulating profiles (bot used yet)
	- Added state.[ch] for keeping track of client state
	- Added protocol.h for GGZ opcodes
	- Implemented user_login() to handle user login event
	- Implemented net_server_id() to handle MSG_SERVER_ID
	- Implemented server_connect() stub  to handle server connect event

2000-09-18  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/msg.c, /cvsroot/ggz/ggz/src/ggzcore/msg.h:
	- Added support for logging to file
	- Currently logs to /tmp/ggz.debug until conf-file parsing is done

2000-09-17  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/.cvsignore, /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/msg.c, /cvsroot/ggz/ggz/src/ggzcore/user.c, /cvsroot/ggz/ggz/src/ggzcore/user.h:
	- First revision of event system
	- Basic callback handling (connect, remove, process)
	- Some testing of event queue in text frontend

2000-09-15  bmh  <bmh@users.sourceforge.net>

	* /cvsroot/ggz/ggz/src/ggzcore/.cvsignore, /cvsroot/ggz/ggz/src/ggzcore/event.c, /cvsroot/ggz/ggz/src/ggzcore/event.h, /cvsroot/ggz/ggz/src/ggzcore/ggzcore.h, /cvsroot/ggz/ggz/src/ggzcore/init.c, /cvsroot/ggz/ggz/src/ggzcore/Makefile.am, /cvsroot/ggz/ggz/src/ggzcore/msg.c:
	- Added new directories for core client and frontends
	- Modified build system to work with new source layout
	- Skeletal libggzcore and text frontend
