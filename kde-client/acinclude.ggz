dnl ======================================
dnl GGZ Gaming Zone - Configuration Macros
dnl ======================================
dnl
dnl Copyright (C) 2001 Josef Spillner, dr_maux@users.sourceforge.net
dnl This file has heavily been inspired by KDE's acinclude :)
dnl It is published under the conditions of the GNU General Public License.
dnl

dnl ------------------------------------------------------------------------
dnl Content of this file:
dnl ------------------------------------------------------------------------
dnl AC_FIND_FILE - macro for convenience (extern in acinclude.kde !!!)
dnl AC_GGZ_EASYSOCK - find the easysock headers and libraries
dnl AC_GGZ_GGZCORE - find the ggzcore headers and libraries
dnl AC_GGZ_GGZCOREPP - find any GGZCore++ installation (TODO)
dnl

dnl ------------------------------------------------------------------------
dnl Try to find the easysock headers and libraries.
dnl $(EASYSOCK_LDFLAGS) will be -L ... (if needed)
dnl and $(EASYSOCK_INCLUDES) will be -I ... (if needed)
dnl ------------------------------------------------------------------------
dnl
AC_DEFUN(AC_GGZ_EASYSOCK,
[
AC_MSG_CHECKING([for GGZ library: easysock])

ac_easysock_includes=NO ac_easysock_libraries=NO
easysock_libraries=""
easysock_includes=""

AC_ARG_WITH(easysock-dir,
    [  --with-easysock-dir=DIR       Easysock installation prefix ],
    [  ac_easysock_includes="$withval"/include
       ac_easysock_libraries="$withval"/lib
    ])
AC_ARG_WITH(easysock-includes,
    [  --with-easysock-includes=DIR  where the easysock includes are. ],
    [  ac_easysock_includes="$withval"
    ])
AC_ARG_WITH(easysock-libraries,
    [  --with-easysock-libraries=DIR where the easysock libs are. ],
    [  ac_easysock_libraries="$withval"
    ])

AC_CACHE_VAL(ac_cv_have_easysock,
[
easysock_incdirs="$ac_easysock_includes /usr/local/include /usr/include"
easysock_header=easysock.h

AC_FIND_FILE($easysock_header, $easysock_incdirs, easysock_incdir)
ac_easysock_includes="$easysock_incdir"

easysock_libdirs="$ac_easysock_libraries /usr/local/lib /usr/lib"

test=NONE
easysock_libdir=NONE
for dir in $easysock_libdirs; do
  try="ls -1 $dir/libeasysock.*"
  if test -n "`$try 2> /dev/null`"; then easysock_libdir=$dir; break; else echo "tried $dir" >&AC_FD_CC ; fi
done

ac_easysock_libraries="$easysock_libdir"

if test "$ac_easysock_includes" = NO || test "$ac_easysock_libraries" = NO; then
  ac_cv_have_easysock="have_easysock=no"
  ac_easysock_notfound=""

  AC_MSG_ERROR([Easysock not found. Please check your installation! ]);
else
  have_easysock="yes"
fi
])

eval "$ac_cv_have_easysock"

if test "$have_easysock" != yes; then
  AC_MSG_RESULT([$have_easysock]);
else
  ac_cv_have_easysock="have_easysock=yes \
    ac_easysock_includes=$ac_easysock_includes ac_easysock_libraries=$ac_easysock_libraries"
  AC_MSG_RESULT([libraries $ac_easysock_libraries, headers $ac_easysock_includes])

  easysock_libraries="$ac_easysock_libraries"
  easysock_includes="$ac_easysock_includes"
fi

AC_SUBST(easysock_libraries)
AC_SUBST(easysock_includes)

EASYSOCK_INCLUDES="-I$easysock_includes"
EASYSOCK_LDFLAGS="-L$easysock_libraries"

AC_SUBST(EASYSOCK_INCLUDES)
AC_SUBST(EASYSOCK_LDFLAGS)

LIB_EASYSOCK='-leasysock'
AC_SUBST(LIB_EASYSOCK)

])

dnl ------------------------------------------------------------------------
dnl Try to find the ggzcore headers and libraries.
dnl $(GGZCORE_LDFLAGS) will be -L ... (if needed)
dnl and $(GGZCORE_INCLUDES) will be -I ... (if needed)
dnl ------------------------------------------------------------------------
dnl
AC_DEFUN(AC_GGZ_GGZCORE,
[
AC_MSG_CHECKING([for GGZ library: ggzcore])

ac_ggzcore_includes=NO ac_ggzcore_libraries=NO
ggzcore_libraries=""
ggzcore_includes=""

AC_ARG_WITH(ggzcore-dir,
    [  --with-ggzcore-dir=DIR       ggzcore installation prefix ],
    [  ac_ggzcore_includes="$withval"/include
       ac_ggzcore_libraries="$withval"/lib
    ])
AC_ARG_WITH(ggzcore-includes,
    [  --with-ggzcore-includes=DIR  where the ggzcore includes are. ],
    [  ac_ggzcore_includes="$withval"
    ])
AC_ARG_WITH(ggzcore-libraries,
    [  --with-ggzcore-libraries=DIR where the ggzcore libs are. ],
    [  ac_ggzcore_libraries="$withval"
    ])

AC_CACHE_VAL(ac_cv_have_ggzcore,
[
ggzcore_incdirs="$ac_ggzcore_includes /usr/local/include /usr/include"
ggzcore_header=ggzcore.h

AC_FIND_FILE($ggzcore_header, $ggzcore_incdirs, ggzcore_incdir)
ac_ggzcore_includes="$ggzcore_incdir"

ggzcore_libdirs="$ac_ggzcore_libraries /usr/local/lib /usr/lib"

test=NONE
ggzcore_libdir=NONE
for dir in $ggzcore_libdirs; do
  try="ls -1 $dir/libggzcore.*"
  if test -n "`$try 2> /dev/null`"; then ggzcore_libdir=$dir; break; else echo "tried $dir" >&AC_FD_CC ; fi
done

ac_ggzcore_libraries="$ggzcore_libdir"

if test "$ac_ggzcore_includes" = NO || test "$ac_ggzcore_libraries" = NO; then
  ac_cv_have_ggzcore="have_ggzcore=no"
  ac_ggzcore_notfound=""

  AC_MSG_ERROR([ggzcore not found. Please check your installation! ]);
else
  have_ggzcore="yes"
fi
])

eval "$ac_cv_have_ggzcore"

if test "$have_ggzcore" != yes; then
  AC_MSG_RESULT([$have_ggzcore]);
else
  ac_cv_have_ggzcore="have_ggzcore=yes \
    ac_ggzcore_includes=$ac_ggzcore_includes ac_ggzcore_libraries=$ac_ggzcore_libraries"
  AC_MSG_RESULT([libraries $ac_ggzcore_libraries, headers $ac_ggzcore_includes])

  ggzcore_libraries="$ac_ggzcore_libraries"
  ggzcore_includes="$ac_ggzcore_includes"
fi

AC_SUBST(ggzcore_libraries)
AC_SUBST(ggzcore_includes)

GGZCORE_INCLUDES="-I$ggzcore_includes"
GGZCORE_LDFLAGS="-L$ggzcore_includes"

AC_SUBST(GGZCORE_INCLUDES)
AC_SUBST(GGZCORE_LDFLAGS)

LIB_GGZCORE='-lggzcore'
AC_SUBST(LIB_GGZCORE)

])

