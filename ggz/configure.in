dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AC_CONFIG_SUBDIRS( easysock )
AM_INIT_AUTOMAKE(ggz_client, 0.0.3pre)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

dnl Compiling Options
dnl =====================
AC_ARG_ENABLE(client, [  --disable-client        Don't build NetGames clients],, enable_client=yes)
AC_ARG_ENABLE(games,  [  --disable-games         Don't build NetGames games],, enable_games=yes)
AC_ARG_ENABLE(debug,  [  --enable-debug          Enable debugging ],, enable_debug=no)
AC_ARG_ENABLE(debug-gdb,    [  --enable-debug-gdb      enable GDB debugging ],,enable_debug_gdb=no)
AC_ARG_ENABLE(debug-mem,    [  --enable-debug-mem      enable mem debugging ],,enable_debug_mem=no)
AC_ARG_ENABLE(debug-socket, [  --enable-debug-socket   enable socket debugging ],, enable_debug_socket=no)


dnl Check for standard build environment
dnl ====================================
AC_PROG_CC
AC_ISC_POSIX
AC_PROG_INSTALL
AC_PROG_CPP
AM_PROG_CC_STDC
AM_PROG_LIBTOOL
AC_PROG_MAKE_SET

dnl Check for header files
dnl ======================
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(sys/time.h unistd.h)

dnl Check for gettext support
dnl =========================

ALL_LINGUAS="de"
AM_GNU_GETTEXT
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi

dnl Check for typedefs, structures, and compiler characteristics
dnl ============================================================
AC_C_CONST
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL
AC_HEADER_TIME
AC_EGREP_CPP(WAIT_ANY, [ #include <sys/wait.h>
		 WAIT_ANY ], AC_MSG_WARN(*** Cannot find WAIT_ANY, defining our own )
	         AC_DEFINE(WAIT_ANY, (pid_t)-1))



dnl Check for library functions
dnl ===========================
AC_CHECK_FUNC(select)
AC_CHECK_FUNC(socket, ,
    AC_CHECK_LIB(socket, socket,
	AC_CHECK_HEADER(sys/socket.h, LDADD="-lsocket",
	    AC_MSG_ERROR(*** Cannot find socket headers ); exit ),
	AC_MSG_ERROR(*** Cannot find socket library ); exit ))

AC_CHECK_FUNC(gethostbyname, ,
    AC_CHECK_LIB(nsl, gethostbyname, LDADD="$LDADD -lnsl",
	AC_MSG_ERROR(*** Cannot find nsl library ); exit ))

AC_CHECK_FUNC(inet_ntoa, ,
    AC_CHECK_LIB(nsl, inet_ntoa, LDADD="$LDADD -lnsl",
	AC_MSG_ERROR(*** Cannot find nsl library ); exit ))

AC_CHECK_LIB(popt, poptGetNextOpt,
    AC_CHECK_HEADER(popt.h, LDADD="$LDADD -lpopt",
        AC_MSG_ERROR(*** Cannot find popt.h header); exit),
    AC_MSG_ERROR(*** Cannot find popt library ); exit)
    
AM_PATH_GTK(1.2.0, ,AC_MSG_ERROR(*** Client needs GTK: GTK not found);exit)

dnl Use -Wall if we have gcc.
dnl =========================
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl


dnl Debug modes
dnl ===========
if test "$enable_debug" = yes; then
    AC_DEFINE(DEBUG)
    DFLAGS="DEBUG"
fi

if test "$enable_debug_socket" = yes; then
    AC_DEFINE(DEBUG_SOCKET)
    DFLAGS="$DFLAGS DEBUG_SOCKET"
fi

if test "$enable_debug_mem" = yes; then
    AC_DEFINE(DEBUG_MEM)
    DFLAGS="$DFLAGS DEBUG_MEM"
    LDADD="$LDADD -ldmalloc"
fi

if test "$enable_debug_gdb" = yes; then
    CFLAGS="$CFLAGS -ggdb"
fi


dnl Various dirs
dnl ============
if test "x${sysconfdir}" = 'x${prefix}/etc'; then
  if test "x${prefix}" = "xNONE"; then
    ggzconfdir="${ac_default_prefix}/etc"  
  else
    ggzconfdir="${prefix}/etc"
  fi
else
  ggzconfdir="${sysconfdir}"
fi
AC_DEFINE_UNQUOTED(GGZCONFDIR, "${ggzconfdir}")


if test "x${libdir}" = 'x${exec_prefix}/lib'; then
  if test "x${exec_prefix}" = "xNONE"; then
    if test "x${prefix}" = "xNONE"; then
      ggzmoddir="${ac_default_prefix}/lib/ggz"
    else
      ggzmoddir="${prefix}/lib/ggz"
    fi
  else
    ggzmoddir="${exec_prefix}/lib/ggz"
  fi
else
  ggzmoddir="${libdir}/ggz"
fi
AC_DEFINE_UNQUOTED(GAMEDIR, "${ggzmoddir}")

packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")


dnl Which progs to compile
dnl ======================

SUBDIRS="easysock"

if test "$enable_client" = yes; then
    SUBDIRS="$SUBDIRS ggz"
fi
if test "$enable_games" = yes; then
    SUBDIRS="$SUBDIRS game_clients"
fi

AC_SUBST(LDADD)
AC_SUBST(SUBDIRS)
AC_SUBST(ggzconfdir)
AC_SUBST(ggzmoddir)
AC_SUBST(packagesrcdir)

AC_OUTPUT([Makefile 
	   ggz/Makefile
	   ggz/ggzrc.test
	   game_clients/Makefile
	   game_clients/spades/Makefile
	   game_clients/tictactoe/Makefile	
	   game_clients/dots/Makefile
	   intl/Makefile
	   po/Makefile.in
	   ])


dnl Status Output
dnl =============
echo "*** GGZ will be built with the following debugging flags: $DFLAGS"
echo "***"
echo "*** To compile and install client:"
echo "***"
echo "***'make install'"
echo "***"
echo "*** To compile and test client locally without installing:"
echo "***"
echo "*** 'make; cd ggz; ./ggz -f ggzrc.test'"
echo ""
