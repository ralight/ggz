<?php include_once("../../site/header.php"); ?>

<table class="pane">
<tr>
<td>
<a href="/libraries/">GGZ Libraries:</a>
|
<a href="/libraries/libggz/">libggz</a>
|
ggzcore
|
<a href="/libraries/ggzmod/">ggzmod</a>
|
<a href="/libraries/ggzdmod/">ggzdmod</a>
</td>
</tr>
</table>

<table class="content">
<tr>
<td>

<b>GGZ Library ggzcore</b><br/>
GGZ core clients and advanced games can use ggzcore to communicate with the GGZ server.
<br/><br/>

<i>Interfaces to ggzcore</i><br/>

<table class="list">
<tr><td>ggzcore</td><td>Language: C</td><td>Location: ggz-client-libs/ggzcore/ggzcore.h</td></tr>
<tr><td>ggzcore++</td><td>Language: C++</td><td>Location: kde-client/ggz-kde/ggzcore++</td></tr>
<tr><td>pyggzcoresimple</td><td>Language: Python</td><td>Location: python/pyggzcore</td></tr>
<tr><td>ggzcore-java</td><td>Language: Java</td><td>Location: java/src/ggz/client/core</td></tr>
</table>

<br/>

<i>Library configuration and dependencies</i><br/>

<table class="list">
<tr><td>Expat</td><td>required</td><td>to handle the XML network protocol</td></tr>
</table>
<br/>

<i>Description</i><br/>

The ggzcore library handles the connection of a client application to the GGZ server. It starts with
offering a global configuration object for storing connection profiles, and then goes on to callback
registration for the connection, negotiation and authentication methods, which might include guest
logins and player registration on the GGZ server. Furthermore, after a login it handles the global
server object, the current room object and, when playing a game, the active game object. Additional
objects include the table the game is associated with, players, game types and game modules which
represent client-side game executables. Alternatively, a game can integrate ggzcore directly instead
of being launched by a ggzcore-using GGZ core client, which is known as embedded ggzcore.
Other tasks handles by the library are querying the local game registry with all properties per game,
retrieving the server message of the day (MOTD) or player statistics, handling public, private and
per-table chat as well as administrative messages, and managing the game launch and join events for
players and spectators.
The ggzcore library depends on libggz from the GGZ project and on expat for XML handling.
The ggzcore-java library is not a wrapper but a reimplementation and as such does not have these
dependencies directly, any Java XML parser is fine.
<br/><br/>

<i>More information</i><br/>
You might want to start with the <a href="http://www.ggzgamingzone.org/docs/api/ggzcore/">API documentation</a>.
Examples of usage include ggz-gtk, ggz-txt and ggz-gnome for the C library, kggz for the C++ wrapper
and v√≠bora for the Python wrapper. As special core clients, also grubby and the Gaim and Kopete IM plugins
as well as ggzap use ggzcore. Finally, games such as Widelands use the embedded feature of ggzcore.
The communication protocol between ggzcore and the GGZ server ggzd is standardized in the
<a href="http://www.ggzgamingzone.org/docs/design/html/">main protocol specification</a>.
Recommended documentation includes the
<a href="http://www.ggzgamingzone.org/docs/coreclients/coreclients.html">Core Clients</a> document,
and to some extent the <a href="http://www.ggzgamingzone.org/docs/games/modules/">Game Modules</a> document.

</td>
</tr>
</table>

<?php include_once("../../site/footer.php"); ?>

