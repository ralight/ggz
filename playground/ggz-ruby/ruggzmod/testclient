#!/usr/bin/env ruby

require "RGGZMod"

begin
	require "Qt4"
	$gui = Qt::Application.new(ARGV)
	puts "## Info: Qt found, providing a full-fledged TTT client ##"
rescue LoadError
	$gui = nil
	puts "## Warning: Qt not found, running in text mode only ##"
end

class TestApp < Qt::Widget
	slots "trigger(int)", "data(int)"

	def initialize
		super

		grid = Qt::GridLayout.new
		for i in 0..8
			hello = Qt::PushButton.new("")
			hello.resize(30, 30)
			grid.addWidget(hello, i % 3, i / 3)
		end
		setLayout(grid)
		setWindowTitle("RGGZMod TicTacToe client")
		resize(300, 300)
		show()
	end

	def setclient(client)
		@client = client
	end

	def trigger(fd)
		@client.dispatch
	end

	def data(fd)
		puts "Data from server!"

		if $gui
			# FIXME: this doesn't work at all!
			sock = Qt::TcpSocket.new(self)
			sock.setSocketDescriptor(fd)
			bytes = sock.bytesAvailable
			ret = sock.read(bytes)
			puts ret.to_s
			puts "Read " + bytes.to_s + " bytes"
			#[1..bytes].each do |i|
			#	byte = sock.getChar()
			#	print "[" + byte + "]"
			#end
			#puts
		else
			sock = IO.new(fd, "w+")
			# FIXME: sock.eof? doesn't work but we still need to read all data here
			#while not sock.eof?
			byte = sock.getc
			puts byte
			#end
		end
	end
end

class TestClient < RGGZMod
	def initialize
		super

		if $gui
			@app = TestApp.new
			@app.setclient(@client)
		end
	end

	def event(id, data)
		puts "TestClient: event!"

		if id == GGZMod::EVENTSTATE
			state = @client.get_state
			puts "State is now " + state.to_s
		elsif id == GGZMod::EVENTSERVER
			fd = data
			puts "Socket to server is " + fd.to_s

			if $gui
				sn = Qt::SocketNotifier.new(fd, Qt::SocketNotifier::Read)
				Qt::Object::connect(sn, SIGNAL("activated(int)"), @app, SLOT("data(int)"))
			else
				sock = IO.new(fd, "w+")
				# FIXME: use select() but mainloop is in RGGZMod
			end
		end
	end

	def loop
		if $gui
			fd = @client.get_control_fd
			sn = Qt::SocketNotifier.new(fd, Qt::SocketNotifier::Read)
			Qt::Object.connect(sn, SIGNAL("activated(int)"), @app, SLOT("trigger(int)"))
			$gui.exec()
		else
			super
		end
	end
end

puts "## RGGZMod Test Client ##"

client = TestClient.new
client.loop

puts "## Bye ##"

