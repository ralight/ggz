--- commit-email.pl.orig.etch	2007-11-11 22:52:11.000000000 +0100
+++ commit-email.pl	2007-11-11 23:22:31.000000000 +0100
@@ -47,8 +47,8 @@
 # You should define exactly one of these two configuration variables,
 # leaving the other commented out, to select which method of sending
 # email should be used.
-#$sendmail = "/usr/sbin/sendmail";
-$smtp_server = "127.0.0.1";
+$sendmail = "/usr/sbin/sendmail";
+#$smtp_server = "127.0.0.1";
 
 # Svnlook path.
 my $svnlook = "/usr/bin/svnlook";
@@ -63,6 +63,8 @@
 # in the log and email messages by not printing the file, then set
 # $no_diff_added to 1.
 my $no_diff_added = 0;
+# This controls the size of the commit email.
+my $max_email_body_size = 20_000;   # characters
 
 # End of Configuration section.
 ######################################################################
@@ -447,6 +449,8 @@
     push(@body, "Log:\n");
     push(@body, @log);
     push(@body, "\n");
+    &check_binary (\@body);
+    &check_truncate (\@body, $max_email_body_size);
   }
 elsif ($mode eq 'revprop-change')
   {
@@ -581,6 +585,7 @@
                                         '-r', $rev, @no_diff_deleted,
                                         @no_diff_added);
         @difflines = map { /[\r\n]+$/ ? $_ : "$_\n" } @difflines;
+        &check_truncate (\@difflines, $max_email_body_size);
       }
 
     if (defined $sendmail and @email_addresses)
@@ -773,3 +778,50 @@
       return @output;
     }
 }
+
+# This truncates @{$r_array} if the cumulative length of strings in
+# @{$r_array} exceeds $max_size. The array is truncated at the line
+# whose string length would cause this to happen.
+sub check_truncate
+{
+  my ($r_array, $max_size) = @_;
+
+  for (my ($line, $size) = (0, 0); $line <= $#{$r_array}; $line++)
+    {
+      if (($size + length $r_array->[$line]) > $max_size)
+        {
+          splice(@{$r_array}, $line);
+          push(@{$r_array}, "[truncated - reached $max_size ...]\n");
+          last;
+        }
+      $size += length($r_array->[$line]);
+    }
+}
+
+# For each committed file, check if it contains binary data. Whenever
+# this is the case, replace all following data with a comment line
+# telling about this fact.
+sub check_binary{
+  my $r_array = shift(@_);
+  my $binary = 0;
+
+  for(my $line = 0; $line <= $#{$r_array}; $line++){
+    my $l = $r_array->[$line];
+    if($binary == 1){
+      if($l eq "\n" and $r_array->[$line + 1] =~ /^Modified:/){
+        $binary = 0;
+      }else{
+        splice(@{$r_array}, $line, 1);
+        $line--;
+      }
+    }else{
+      for(my $i = 0; $i < length $l; $i++){
+        my $c = ord(substr($l, $i, 1));
+        if($c < 32 and $c != 10 and $c != 13 and $c != 9){
+          $binary = 1;
+          $r_array->[$line] = "[binary data detected]\n";
+        }
+      }
+    }
+  }
+}
