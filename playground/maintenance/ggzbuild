#!/usr/bin/env python
#
# GGZ Gaming Zone build tool

import os
import sys
#import glob
import signal

# Revert python's own signal modification for external sub-processes
# FIXME: It's a hack, see mail to ggz-dev about this weird issue
signal.signal(signal.SIGPIPE, signal.SIG_DFL)

"""
Create a file ~/.ggzbuildrc with per-module entries such as:
libggz = --disable-debug
(special module GLOBAL is appended to all modules)
Then run ggzbuild in the current GGZ SVN module directory
It will run autogen.sh, configure etc. automatically
"""

reset = "\x1b[39;49;00m"
red = "\x1b[31m"

def out(s):
	print red + s + reset

def readconfig(configfile):
	if not configfile:
		configfile = os.getenv("HOME") + "/.ggzbuildrc"
	conf = None
	try:
		conf = open(configfile)
	except:
		out("Create ~/.ggzbuildrc first (might be empty)!")
		sys.exit(1)
	lines = conf.readlines()
	conf.close()

	config = {}

	for line in lines:
		line = line.strip()
		#print "*", line
		try:
			(module, args) = line.split("=", 1)
			module = module.strip()
			args = args.strip()
			#print (module, args)
			config[module] = args
		except:
			pass

	return config

def build(module, config, install, srcdir):
	out("GGZBUILD: module = " + module)

	args = config.setdefault(module, "")
	args += " " + config.setdefault("GLOBAL", "")

	if not os.path.exists(srcdir + "/configure"):
		cmd = srcdir + "/autogen.sh " + args
	else:
		cmd = srcdir + "/configure " + args

	out("GGZBUILD: options = " + args)
	ec = os.system(cmd)
	if ec:
		out("GGZBUILD: configure error")
		sys.exit(ec)

	if install:
		ec = os.system("make")
		if ec:
			out("GGZBUILD: make error")
			sys.exit(ec)
		ec = os.system("make install")
		if ec:
			out("GGZBUILD: make install error")
			sys.exit(ec)

configfile = None
if len(sys.argv) == 2:
	if sys.argv[1] == "--help":
		out("Syntax: ggzbuild [<~/.ggzbuildrc>]")
		sys.exit(0)
	configfile = sys.argv[1]
config = readconfig(configfile)

if config.has_key("SOURCEDIR"):
	srcdir = config["SOURCEDIR"]
else:
	srcdir = "."

if os.path.exists(srcdir + "/libggz") and os.path.exists(srcdir + "/ggz-client-libs"):
	out("GGZBUILD: global invocation")

	install = True
	if os.getenv("NOCONFIGURE"):
		install = False

	#dirs = glob.glob("*")
	dirs = config["MODULES"]
	for module in dirs.split(" "):
		if srcdir != ".":
			os.mkdir(module)
			xsrcdir = srcdir + "/" + module
		else:
			xsrcdir = "."
		os.chdir(module)
		build(module, config, install, xsrcdir)
		os.chdir("..")
else:
	module = os.getcwd().split("/")[-1]
	build(module, config, False, srcdir)

