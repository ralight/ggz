? data/civclient.dsc.in
? data/civserver.dsc.in
? data/civserver.room
? m4/ggz.m4
Index: acconfig.old
===================================================================
RCS file: /home/freeciv/CVS/freeciv/acconfig.old,v
retrieving revision 1.4
diff -u -r1.4 acconfig.old
--- acconfig.old	2003/01/13 21:24:05	1.4
+++ acconfig.old	2003/03/22 16:15:54
@@ -28,6 +28,8 @@
 #undef VERSION_STRING
 #undef DEBUG
 #undef NDEBUG
+#undef GGZ_CLIENT
+#undef GGZ_SERVER
 #undef HAVE_LIBICE
 #undef HAVE_LIBSM
 #undef HAVE_LIBX11
Index: configure.ac
===================================================================
RCS file: /home/freeciv/CVS/freeciv/configure.ac,v
retrieving revision 1.40
diff -u -r1.40 configure.ac
--- configure.ac	2003/03/07 04:54:59	1.40
+++ configure.ac	2003/03/22 16:15:55
@@ -28,6 +28,8 @@
 dnl  AC_DEFINE_UNQUOTED(PACKAGE, $PACKAGE, [Package name])
 dnl  AC_DEFINE_UNQUOTED(VERSION, $VERSION, [Version number])
 dnl  AC_SUBST(VERSION)
+AC_SUBST(MAJOR_VERSION)
+AC_SUBST(MINOR_VERSION)
 
 AC_DEFINE_UNQUOTED(MAJOR_VERSION, $MAJOR_VERSION, [Major version])
 AC_DEFINE_UNQUOTED(MINOR_VERSION, $MINOR_VERSION, [Minor version])
@@ -270,6 +272,22 @@
    fi
 fi
 
+dnl Check for GGZ
+AC_GGZ_INIT
+AC_GGZ_LIBGGZ([try_ggz="yes"], [try_ggz="no"])
+if test x"$try_ggz" = "xyes"; then
+  AC_GGZ_GGZMOD([AC_GGZ_CONFIG([ggz_client="yes"], ignore)], ignore)
+  AC_GGZ_GGZDMOD([ggz_server="yes"], ignore)
+fi
+if test x"$ggz_server" = "xyes"; then
+  GGZ_SERVER_FILES="civserver.dsc civserver.room"
+  AC_DEFINE(GGZ_SERVER, [], [Server support for GGZ])
+fi
+if test x"$ggz_client" = "xyes"; then
+  GGZ_CLIENT_FILES="civclient.dsc"
+  AC_DEFINE(GGZ_CLIENT, [], [Client support for GGZ])
+fi
+
 dnl BeOS-specific settings
 if test x`$UNAME -s` = xBeOS ; then
   AC_DEFINE(SOCKET_ZERO_ISNT_STDIN, 1, [BeOS-specific setting])
@@ -687,6 +705,8 @@
 
 AC_CONFIG_FILES([Makefile
           data/Makefile 
+          data/civserver.dsc
+          data/civclient.dsc
 	  data/misc/Makefile 
 	  data/trident/Makefile 
 	  data/isotrident/Makefile 
Index: configure.in
===================================================================
RCS file: /home/freeciv/CVS/freeciv/configure.in,v
retrieving revision 1.216
diff -u -r1.216 configure.in
--- configure.in	2003/03/03 23:06:38	1.216
+++ configure.in	2003/03/22 16:15:56
@@ -269,6 +269,22 @@
    fi
 fi
 
+dnl Check for GGZ
+AC_GGZ_INIT
+AC_GGZ_LIBGGZ([try_ggz="yes"], [try_ggz="no"])
+if test x"$try_ggz" = "xyes"; then
+  AC_GGZ_GGZMOD([AC_GGZ_GGZCONFIG([ggz_server="yes"], ignore)], ignore)
+  AC_GGZ_GGZDMOD([AC_GGZ_SERVER([ggz_server="yes"], ignore)], ignore)
+fi
+if test x"$ggz_server" = "xyes"; then
+  GGZ_SERVER_FILES="civserver.dsc civserver.room"
+  AC_DEFINE(GGZ_SERVER, [], [Server support for GGZ])
+fi
+if test x"$ggz_client" = "xyes"; then
+  GGZ_CLIENT_FILES="civclient.dsc"
+  AC_DEFINE(GGZ_CLIENT, [], [Client support for GGZ])
+fi
+
 dnl BeOS-specific settings
 if test x`$UNAME -s` = xBeOS ; then
   AC_DEFINE(SOCKET_ZERO_ISNT_STDIN)
@@ -674,6 +690,8 @@
 
 AC_OUTPUT(Makefile
           data/Makefile 
+          data/civserver.dsc
+          data/civclient.dsc
 	  data/misc/Makefile 
 	  data/isotrident/Makefile 
 	  data/trident/Makefile 
Index: client/Makefile.am
===================================================================
RCS file: /home/freeciv/CVS/freeciv/client/Makefile.am,v
retrieving revision 1.48
diff -u -r1.48 Makefile.am
--- client/Makefile.am	2003/02/23 14:11:14	1.48
+++ client/Makefile.am	2003/03/22 16:15:57
@@ -129,7 +129,7 @@
 
 bin_PROGRAMS = civclient
 
-INCLUDES = -I$(srcdir)/include -I$(top_srcdir)/common -I$(top_srcdir)/common/aicore -I../intl -I$(srcdir)/agents @SOUND_CFLAGS@
+INCLUDES = -I$(srcdir)/include -I$(top_srcdir)/common -I$(top_srcdir)/common/aicore -I../intl -I$(srcdir)/agents @SOUND_CFLAGS@ @LIBGGZ_INCLUDES@ @GGZMOD_INCLUDES@
 
 ## Above, note -I../intl instead of -I$(top_srdir/intl) is deliberate.
 
@@ -182,4 +182,4 @@
 civclient_LDADD        = @gui_sources@/libguiclient.a \
 	../common/libcivcommon.a @INTLLIBS@ @gui_sources@/libguiclient.a \
 	../common/libcivcommon.a @CLIENT_LIBS@ ../common/aicore/libaicore.a agents/libagents.a \
-	@CLIENT_LIBS@ @SOUND_LIBS@
+	@CLIENT_LIBS@ @SOUND_LIBS@ @LIB_GGZMOD@ @GGZMOD_LDFLAGS@
Index: client/civclient.c
===================================================================
RCS file: /home/freeciv/CVS/freeciv/client/civclient.c,v
retrieving revision 1.164
diff -u -r1.164 civclient.c
--- client/civclient.c	2003/02/22 13:22:32	1.164
+++ client/civclient.c	2003/03/22 16:15:59
@@ -32,6 +32,10 @@
 #include <winsock.h>
 #endif
 
+#ifdef GGZ_CLIENT
+#include <ggzmod.h>
+#endif
+
 #include "capstr.h"
 #include "fcintl.h"
 #include "game.h"
@@ -86,6 +90,7 @@
 char metaserver[512] = "\0";
 int  server_port = -1;
 bool auto_connect = FALSE; /* TRUE = skip "Connect to Freeciv Server" dialog */
+bool with_ggz = FALSE;
 
 static enum client_states client_state = CLIENT_BOOT_STATE;
 
@@ -147,6 +152,9 @@
     fprintf(stderr, _("  -S, --Sound FILE\tRead sound tags from FILE\n"));
     fprintf(stderr, _("  -t, --tiles FILE\t"
 		      "Use data file FILE.tilespec for tiles\n"));
+#ifdef GGZ_CLIENT
+    fprintf(stderr, _("  -g, --ggz\t\tEnable GGZ mode\n"));
+#endif
     fprintf(stderr, _("  -v, --version\t\tPrint the version number\n"));
     fprintf(stderr, _("      --\t\t"
 		      "Pass any following options to the UI.\n"
@@ -182,6 +190,10 @@
       sz_strlcpy(tile_set_name, option);
    else if (is_option("--", argv[i])) {
      ui_separator = TRUE;
+#ifdef GGZ_CLIENT
+   } else if (is_option("--ggz", argv[i])) {
+     with_ggz = TRUE;
+#endif
    } else { 
       fprintf(stderr, _("Unrecognized option: \"%s\"\n"), argv[i]);
       exit(EXIT_FAILURE);
@@ -707,7 +719,9 @@
 	auto_connect = FALSE;	/* don't try this again */
       }
     } else {
-      gui_server_connect();
+      if (!with_ggz) {
+	gui_server_connect();
+      }
     }
   }
   update_turn_done_button_state();
Index: client/civclient.h
===================================================================
RCS file: /home/freeciv/CVS/freeciv/client/civclient.h,v
retrieving revision 1.26
diff -u -r1.26 civclient.h
--- client/civclient.h	2003/01/05 20:51:36	1.26
+++ client/civclient.h	2003/03/22 16:15:59
@@ -46,6 +46,7 @@
 extern char metaserver[512];
 extern int  server_port;
 extern bool auto_connect;
+extern bool with_ggz;
 extern bool waiting_for_end_turn;
 extern bool turn_done_sent;
 
Index: client/clinet.c
===================================================================
RCS file: /home/freeciv/CVS/freeciv/client/clinet.c,v
retrieving revision 1.80
diff -u -r1.80 clinet.c
--- client/clinet.c	2003/03/05 08:56:07	1.80
+++ client/clinet.c	2003/03/22 16:16:00
@@ -56,6 +56,10 @@
 #include <sys/utsname.h>
 #endif
 
+#ifdef GGZ_CLIENT
+#include <ggzmod.h>
+#endif
+
 #include "capstr.h"
 #include "fcintl.h"
 #include "game.h"
@@ -177,18 +181,34 @@
 int try_to_connect(char *user_name, char *errbuf, int errbufsize)
 {
   struct packet_req_join_game req;
-
-  if ((aconnection.sock = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
-    (void) mystrlcpy(errbuf, mystrerror(errno), errbufsize);
-    return -1;
-  }
-
-  if (connect(aconnection.sock, (struct sockaddr *) &server_addr,
-      sizeof(server_addr)) == -1) {
-    (void) mystrlcpy(errbuf, mystrerror(errno), errbufsize);
-    my_closesocket(aconnection.sock);
-    aconnection.sock = -1;
-    return errno;
+#ifdef GGZ_CLIENT
+  GGZMod *mod;
+#endif
+
+  if (!with_ggz) {
+    if ((aconnection.sock = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
+      (void) mystrlcpy(errbuf, mystrerror(errno), errbufsize);
+      return -1;
+    }
+
+    if (connect(aconnection.sock, (struct sockaddr *) &server_addr,
+		sizeof(server_addr)) == -1) {
+      (void) mystrlcpy(errbuf, mystrerror(errno), errbufsize);
+      my_closesocket(aconnection.sock);
+      aconnection.sock = -1;
+      return errno;
+    }
+  } else {
+#ifdef GGZ_CLIENT
+    /* We're in GGZ mode */
+    mod = ggzmod_new(GGZMOD_GAME);
+    aconnection.sock = ggzmod_get_fd(mod);
+    if (aconnection.sock < 0) {
+      fprintf(stderr, _("Only the GGZ client must call civclient"
+			" in ggz mode!\n"));
+      exit(EXIT_FAILURE);
+    }
+#endif
   }
 
   if (aconnection.buffer) {
Index: data/.cvsignore
===================================================================
RCS file: /home/freeciv/CVS/freeciv/data/.cvsignore,v
retrieving revision 1.3
diff -u -r1.3 .cvsignore
--- data/.cvsignore	2002/04/13 13:59:27	1.3
+++ data/.cvsignore	2003/03/22 16:16:01
@@ -1,3 +1,5 @@
 Makefile
 Makefile.in
+civserver.dsc
+civclient.dsc
 .deps
Index: data/Makefile.am
===================================================================
RCS file: /home/freeciv/CVS/freeciv/data/Makefile.am,v
retrieving revision 1.23
diff -u -r1.23 Makefile.am
--- data/Makefile.am	2002/08/12 20:03:10	1.23
+++ data/Makefile.am	2003/03/22 16:16:01
@@ -9,7 +9,10 @@
 	trident_shields.tilespec	\
 	helpdata.txt	\
 	civ1.serv	\
-	civ2.serv
+	civ2.serv	\
+	civserver.dsc.in	\
+	civserver.room		\
+	civclient.dsc.in
 
 EXTRA_DIST = $(pkgdata_DATA)
 
Index: server/Makefile.am
===================================================================
RCS file: /home/freeciv/CVS/freeciv/server/Makefile.am,v
retrieving revision 1.25
diff -u -r1.25 Makefile.am
--- server/Makefile.am	2003/03/11 17:59:27	1.25
+++ server/Makefile.am	2003/03/22 16:16:08
@@ -2,7 +2,7 @@
 
 bin_PROGRAMS = civserver
 noinst_LIBRARIES = libcivserver.a
-INCLUDES = -I$(srcdir)/../common -I$(srcdir)/../ai -I../intl -I$(top_srcdir)/common/aicore
+INCLUDES = -I$(srcdir)/../common -I$(srcdir)/../ai -I../intl -I$(top_srcdir)/common/aicore @GGZDMOD_INCLUDES@
 
 ## Above, note -I../intl instead of -I$(top_srdir/intl) is deliberate.
 
@@ -70,4 +70,4 @@
 
 
 civserver_DEPENDENCIES = ../common/libcivcommon.a ../ai/libcivai.a ./libcivserver.a ../common/aicore/libaicore.a
-civserver_LDADD        = ../common/libcivcommon.a ../ai/libcivai.a ./libcivserver.a @INTLLIBS@ ../common/libcivcommon.a ../ai/libcivai.a ./libcivserver.a ../common/aicore/libaicore.a $(SERVER_LIBS)
+civserver_LDADD        = ../common/libcivcommon.a ../ai/libcivai.a ./libcivserver.a @INTLLIBS@ ../common/libcivcommon.a ../ai/libcivai.a ./libcivserver.a ../common/aicore/libaicore.a $(SERVER_LIBS) @GGZDMOD_LDFLAGS@ @LIB_GGZDMOD@
