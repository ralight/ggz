As the GGZ packages in Debian (and its derivates)
are horribly outdated, this is an attempt to bring
them up to date.

They're currently be built with GGZ 0.0.11, but
shall use GGZ 0.0.12(pre) before being used anywhere
due to the easier packaging routines.

Concepts:
---------
The rules files are intentionally kept small. They include
a common template which is shared among all GGZ packages.
Only the configuration and some actions after make install
should normally influence the package behaviour.
For the first, RULES_CONFIGURE can be set. For the second,
a double-colon rule (RULES_MAKE::) can be inserted before
or after the include statement.

Versions
--------
For binary packages from the same source package, a tight
automated dependency (= ${Source-Version}) should be used.
For other GGZ packages, (>= x.y.z) should be used.
For debian build-deps, (>> x.y.z) should be used.
The meta-ggz package is an exception, it also uses an
equal (=) relationship.
Data packages should declare a recommends (= ${Source-Version})
on their binary counterpart, and be set to architecture:all.

TODO
----
- manpages for ggz-python (partially fixed for 0.0.13!)

Open questions:
---------------
* should ggzmod-dev build-depend on ggzcore-bin?
* should ggzcore-bin really not be named libggzcore-bin?
* how to package ggzmod++ and ggzdmod++?
* concept of using rules.common.mk
* always install all documentation for all packages?
* replacement policies for library packages?

