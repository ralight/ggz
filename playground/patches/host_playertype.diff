Index: ggzd/ggzd/players.c
===================================================================
--- ggzd/ggzd/players.c	(revision 8302)
+++ ggzd/ggzd/players.c	(working copy)
@@ -293,6 +293,8 @@
 		type = GGZ_PLAYER_BOT;
 	else if(perms_is_admin(player))
 		type = GGZ_PLAYER_ADMIN;
+	else if(perms_is_host(player))
+		type = GGZ_PLAYER_HOST;
 	else
 		type = GGZ_PLAYER_NORMAL;
 
Index: ggzd/ggzd/ggzduedit.c
===================================================================
--- ggzd/ggzd/ggzduedit.c	(revision 8302)
+++ ggzd/ggzd/ggzduedit.c	(working copy)
@@ -148,6 +148,8 @@
 	printf("               -> roles: ");
 	if((perms & PERMS_ADMIN_MASK) == PERMS_ADMIN_MASK)
 		printf("[admin]");
+	if((perms & PERMS_HOST_MASK) == PERMS_HOST_MASK)
+		printf("[host]");
 	if((perms & PERMS_DEFAULT_SETTINGS) == PERMS_DEFAULT_SETTINGS)
 		printf("[registered]");
 	if((perms & PERMS_DEFAULT_ANON) == PERMS_DEFAULT_ANON)
Index: ggzd/ggzd/perms.c
===================================================================
--- ggzd/ggzd/perms.c	(revision 8302)
+++ ggzd/ggzd/perms.c	(working copy)
@@ -52,10 +52,16 @@
 
 bool perms_is_admin(GGZPlayer *player)
 {
-	return ((player->perms & PERMS_ADMIN_MASK) != 0);
+	return ((player->perms & PERMS_ADMIN_MASK) == PERMS_ADMIN_MASK);
 }
 
 
+bool perms_is_host(GGZPlayer *player)
+{
+	return ((player->perms & PERMS_HOST_MASK) != 0);
+}
+
+
 bool perms_is_bot(GGZPlayer *player)
 {
 	return ((player->perms & PERMS_CHAT_BOT) != 0);
Index: ggzd/ggzd/perms.h
===================================================================
--- ggzd/ggzd/perms.h	(revision 8302)
+++ ggzd/ggzd/perms.h	(working copy)
@@ -49,6 +49,11 @@
 	PERMS_EDIT_TABLES | \
 	PERMS_TABLE_PRIVMSG)
 
+/* Host type bits */
+#define PERMS_HOST_MASK ( \
+	PERMS_EDIT_TABLES | \
+	PERMS_TABLE_PRIVMSG)
+
 /* Default permissions for guest users. */
 #define PERMS_DEFAULT_ANON ( \
 	PERMS_JOIN_TABLE | \
@@ -67,6 +72,7 @@
 /* These functions must already have a player read-lock. */
 void perms_init(GGZPlayer *player, ggzdbPlayerEntry *db_pe);
 bool perms_is_admin(GGZPlayer *player);
+bool perms_is_host(GGZPlayer *player);
 bool perms_is_bot(GGZPlayer *player);
 
 #ifdef PERMS_DEFINE_STR_TABLE
Index: libggz/src/ggz_common.c
===================================================================
--- libggz/src/ggz_common.c	(revision 8302)
+++ libggz/src/ggz_common.c	(working copy)
@@ -180,6 +180,7 @@
 #define GUEST_PLAYER_NAME "guest"
 #define NORMAL_PLAYER_NAME "normal"
 #define ADMIN_PLAYER_NAME "admin"
+#define HOST_PLAYER_NAME "host"
 #define BOT_PLAYER_NAME "bot"
 #define UNKNOWN_PLAYER_NAME "unknown"
 
@@ -192,6 +193,8 @@
 		return NORMAL_PLAYER_NAME;
 	case GGZ_PLAYER_ADMIN:
 		return ADMIN_PLAYER_NAME;
+	case GGZ_PLAYER_HOST:
+		return HOST_PLAYER_NAME;
 	case GGZ_PLAYER_BOT:
 		return BOT_PLAYER_NAME;
 	case GGZ_PLAYER_UNKNOWN:
@@ -215,6 +218,8 @@
 		return GGZ_PLAYER_GUEST;
 	} else if (strcasecmp(type_str, ADMIN_PLAYER_NAME) == 0) {
 		return GGZ_PLAYER_ADMIN;
+	} else if (strcasecmp(type_str, HOST_PLAYER_NAME) == 0) {
+		return GGZ_PLAYER_HOST;
 	} else if (strcasecmp(type_str, BOT_PLAYER_NAME) == 0) {
 		return GGZ_PLAYER_BOT;
 	}
Index: libggz/src/ggz_common.h
===================================================================
--- libggz/src/ggz_common.h	(revision 8302)
+++ libggz/src/ggz_common.h	(working copy)
@@ -125,9 +125,12 @@
 	/** A guest player is not registered. */
 	GGZ_PLAYER_GUEST,
 
-	/* An admin player is registered and has some special permissions. */
+	/* An admin player is registered and has all special permissions. */
 	GGZ_PLAYER_ADMIN,
 
+	/* A host player is registered and has a few special permissions. */
+	GGZ_PLAYER_HOST,
+
 	/* A bot is a special type of player. */
 	GGZ_PLAYER_BOT,
