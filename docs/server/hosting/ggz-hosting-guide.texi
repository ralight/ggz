\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename ggz-hosting-guide.info
@settitle The GGZ Gaming Zone 0.0.5 - Hosting Guide
@setchapternewpage odd
@c %**end of header

@c TODO: 
@c links to other documentation
@c server log analysis
@c web presentation of usage percentage etc.
@c TLS setup
@c 'playing nice': metaservers, announce on ggz-servers list

@ifinfo
Copyright (C) 2001, 2002 Josef Spillner, dr_maux@users.sourceforge.net
@end ifinfo

@c Frontpage
@titlepage
@title The GGZ Gaming Zone 0.0.5 - Hosting Guide
@subtitle Instructions and Recommendations for Server Hosters
@author Josef Spillner

@c Copyright page
@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001, 2002 Josef Spillner, dr_maux@users.sourceforge.net
Published under the GNU Free Documentation License.
@end titlepage

@c Index (Top)
@node Top, Foreword, (dir), (dir)
@c @top Foreword

@ifinfo
This file is the info format of the GGZ Gaming Zone Hosting Guide, which is
also available in postscript and HTML format.
It describes how to setup a GGZ server and how to configure and maintain it.
See http://ggz.sourceforge.net/docs/ for the latest edition.
@end ifinfo

@menu
* Foreword:: General notes about this document
* Game Servers:: History and Diversity
* Installation:: How to prepare and survive a GGZ installation
* Internal Games:: Description of available games
* External Games:: Additional games for GGZ
* Other GGZ Servers:: How to install the Meta Server and TelGGZ
* GGZ Server Tools:: Make an admin's life easier
* Server Maintaining:: Help for administrators
@end menu

@node Foreword, Game Servers, Top, Top
@chapter Foreword
@c @cindex Index entry for Chapter Zero

Over the last months the hosting of free gaming servers has turned into a task
which sometimes demands skills and time effort by the server hoster. The games
are becoming more complex, the infrastructure grows, and inter-server
communication, such like metaservers, starts a new era of free multiplayer
gaming.

This guide helps people to set up servers. It is specifically targeted at GGZ
servers, but contains some general material as well, mostly because setting up
a full-featured GGZ server involves the installation of many different games.

Feel free to ask if something is in doubt. The GGZ Gaming Zone Development Team
does its best to keep this guide always up-to-date and tries to avoid any
errors and typos, but this is a very new topic and may take some time to
stabilize.

@node Game Servers, Installation, Foreword, Top
@chapter Game Servers
@c @cindex Index entry for First Chapter

The traditional approach is to have game servers running permanently on a host,
and let players connect to them using their game clients. Usually the server
does then spawn a new process for each started game, which exits when all
players have left the game.
Permanent game servers are a variant of this: for example, role-play games do
often only consist of one process which never ends, and players may join and
leave whenever they wish.
GGZ does now (experimentally) support permanent game servers too; see the
section about the game Keepalive below. This might however be subject to
change for 0.0.6.

@node Installation, Internal Games, Game Servers, Top
@chapter Installation
@c @cindex Index entry for Second Chapter

@section Overview

This describes a typical setup for GGZ 0.0.5.
All following versions will certainly require other tools or other versions of
the present one, but the main concept hasn't changed for a while.
Before installing GGZ on a server, make sure that the following conditions are
met:
@itemize @bullet
@item The server has its base system installed.
@item Network connectivity is present.
@item Libraries and development packages (including headers) are installed
according to the requirements given in the release information; at present,
this is:

@itemize
@item libdb 2 or 3
@item libpopt
@item libexpat
@item perl
@end itemize
@end itemize

@section Hardware requirements

You should calculate a need of about 10-20 MB of initial disk space, which
might however not be enough if the server runs over a long time.
Memory is normally not an issue, even old server hardware with only 32 MB of
RAM should be sufficient. The same goes for the CPU - a GGZ server with less
than 100 people on it can be handled by any Pentium-class or better CPU.
Network bandwidth is difficult to estimate, as each game requires a different
amount of it. But the GGZ development server, connected by 56k, handles a few
players and games at the same time quite well, so there's no need for high
bandwidth under normal circumstances.
More detailed calculations, including real-time games and measurement/control
tools will follow later.

@section Base installation
Before the main server (ggzd) can be installed, its dependencies must be
resolved. The GGZ package 'libggz' is currently the questioned
package; this replaces the 'easysock' package which was used in version 0.0.4.
After libggz is installed, the server packages 'ggzd', which is the main
server, and 'ggz-game-servers' including many game servers, should follow.
Both need the library package 'libggzdmod' as well.
When installing from source, all of those can be found in the 'ggzd' CVS
module.
Upon installation, quite some files and directories are created under the
chosen prefix (usually /usr/local when installing from source and /usr
otherwise):

@itemize
@item etc: configuration of ggzd and game registry; message of the day (MOTD)
@item bin: ggzd executable
@item lib/ggzd: game servers
@item share: game server data
@item var/ggzd: dynamic data such as players and statistics (if not present yet, it
is created on startup), and dynamic game data
@end itemize

Although normally the server hierarchy will be under /usr or /usr/local, there
are situations where someone doesn't have root access on a system to install
the GGZ packages there.
This is no problem, installing into one's home directory is supported as well.
For installations from source, the getggz.sh script is recommended, because it
handles this task very fast in an interactive way.
This script, together with several others, will eventually be part of a server
support package.
For the time being, it is present in Appendix A.

@subsection Message of the day

As each server should be unique in one way or the other, changing the MOTD
(which the players read when they log in) is one of the first steps to be made.
C-style variables place holders can be used, they are currently defined like:
@itemize
@item %h: server host
@item %p: server port
@item %d: current date
@item %t: time zone
@item %a: server administrator
@item %e: administrator email address
@item %c: color switch; must be followed by a number between 0 and 9
@end itemize

@subsection Widely used terms

The GGZ @emph{server} provides different @emph{rooms}. Just like in a big
house, a player can only be in one room at a time. Each room has a special
purpose, and like there are kitchen, bedroom and entrance in a real house,
there are rooms for TicTacToe, Chess and Hastings in a game server. To enhance
this analogy: Many houses have, say, two bathrooms with different interieur. So
a GGZ server administrator can set up a small TicTacToe room for 10 people
called 'TTT Newbies' with a restricted set of maximum 2 tables, and a larger
one for 50 people tagged 'TTT Tournament' and no further restrictions.
Therefore, each room is linked to exactly one @emph{game type}. Based on these
types, players start to play their @emph{games} by creating @emph{tables}.
Each table can hold 2 to unlimited players, dependent on the room setup.
At present time, however, the maximum number of players is restricted to 8.

@subsection Main GGZ server configuration

The main GGZ server (ggzd) is configured by a single file, named ggzd.conf. The
default values are fine for testing and running a few games, but it is strongly
recommended that server administrators check all values contained in the file.
For example, the administrative contact information or the server-client
communication encryption should be customized.
When running a GGZ server on a desktop system, it will be possible to configure
the server graphically in the future. A KDE control center module is already
available for reading in configuration files.

@section Normal installation

A ggzd alone is not much fun, there are other components as well which are
worth to be installed:
@itemize @bullet
@item The GGZ Meta Server
@item Grubby, the GGZ chat bot
@end itemize

In a later chapter the details on how to install these are explained.

@section Extended installation

Some programs are only installed by very few people, mostly because they are
very specialized. TelGGZ, the telnet wrapper which allows world-wide
participation in GGZ chat sessions over the telnet protocol, is one such
candidate.

@node Internal Games, External Games, Installation, Top
@chapter Internal Games
@c @cindex Index entry for Third Chapter

@section Scope

We call all the games which come along with GGZ 'internal games'. This
expresses that they have been designed to work with GGZ, and make extensive use
of the possible options which the GGZ server offers to them. In the future this
will include game statistics, rankings, saved games and more.
Many players expect the internal games to be installed on every server, and
this is highly recommended. For development and analysis of games they provide
very good examples, ranging from a simple tic-tac-toe game to more complex ones
with different protocols.

Each game has its homepage on:

@url{http://ggz.sourceforge.net/games/<gamename>}

@section Overview on the games

@subsection Kamikaze

This game server is not part of GGZ yet, but will be from version 0.0.6 on.

@subsection Chess

This is the GGZ variant of the chessd server, which is developed using the
cgc library from @url{http://chessd.sourceforge.net}, like the chessd Fischer
server.

@subsection Chinese Checkers

A chinese checkers game for 2-6 players.

@subsection Combat

This is the server for the strategy game Combat.

@subsection Copenhagen

The Copenhagen server is not part of GGZ 0.0.5 because it is not stable enough
yet. It will be present in the next version.
You can however install it from source, which is available from MindX CVS:
@url{http://mindx.sourceforge.net}

@subsection Dots

A Connect the Dots server for GGZ.

@subsection Escape

The escape server serves the Windows game client Escape, see
@url{http://wggz.sourceforge.net} for details.

@subsection GGZCards

This is a special game, it provides different game servers for one game client.
The following games are currently supported: Bridge, Euchre, Hearts, LaPocha,
Spades, Suaro, Sueca and Whist.
There will be more in the future, for example Skat.

@subsection Hastings1066

Strategy game for 2-8 players.

@subsection Keepalive

This game is currently in experimental stage. It has been invented as a
proof-of-concept to lower the barriers of enhanced game development, including
game spectators, eternal runtime and a more complex server-side design.
It writes player data into a subdirectory of ggzd's variable data directory.

@subsection Krosswater

Krosswater is written in C++ and uses its own library libzoneserver, which
should be taken care of when installing locally. If the installation is not
done properly, lots of ghost tables will show up after some time.

@subsection LaPocha

A card game server.

@subsection Muehle

The Muehle server is not yet a full server, it only handles game initialization
for Muehle (Nine men's morris), and passes the game data between the clients.

@subsection NetSpades

A card game server for the NetSpades game which has been derived from the
former non-GGZ NetSpades.

@subsection Reversi

Game server for the reversi game.

@subsection TicTacToe

The easiest game, which does therefore serve as an example for beginners in GGZ
game development. 

@node External Games, Other GGZ Servers, Internal Games, Top
@chapter External Games
@c @cindex Index entry for Fourth Chapter

@section Scope

Games developed independent from GGZ, for example games which existed for a
long time already and have just recently been ported to run on GGZ servers, are
commonly called 'external games'. Their installation base is varying, although
it is not very difficult to support these games as well. All major GGZ servers
should include all of them to give their players a better choice.

@section Description of available external games

@subsection Bathalla Naval

This is a graphical server using the Gnome libraries, so it is only of interest
for people who run a GGZ server on a desktop system.
See @url{http://batnav.sourceforge.net}.

@subsection bzFlag

The server for the well-known realtime 3D tank game. This server is a patched
version of bzFlag, which is available from @url{http://www.bzflag.org}.

@subsection Freeciv

A patched version of the FreeCiv server (@url{http://www.freeciv.org}) runs
over GGZ as well.

@subsection Stalker

Stalker is an SDL realtime game which uses UDP communication.
See @url{http://stalker.sourceforge.net}.

@subsection T.E.G.

T.E.G. is a Gnome game, which has GGZ support built-in. The server needs libxml
and libglib installed.

@node Other GGZ Servers, GGZ Server Tools, External Games, Top
@chapter Other GGZ Servers
@c @cindex Index entry for Fifth Chapter

@section The GGZ Meta Server (ggzmetaserv)

This is an XML based service which allows clients to connect to select between
several servers, without having to manually configure all of them. Meta servers
operate in networks and keep themselves consistant automatically, so that both
a broken GGZ server and a broken GGZ Meta Server doesn't annoy that much.
Meta servers can be installed quite forward, no further configuration is
necessary - all of the initial setup is read from a single read-only
configuration file named metaservconf.xml.
However, during operation a cache file named $HOME/.ggz/metaserver.cache is
created which contains the URIs of other meta servers, so the network can grow
dynamically.
The current implementation of the GGZ Meta Server is read-only, so the
configuration file needs to be maintained by hand.
It runs on port 15689.
You can get ggzmetaserv as part of the GGZ utils package.

@section The GGZ Telnet Wrapper (telggz)

This server requires the ggzcore library to be installed on the server side,
just like grubby. It also uses the meta server, which doesn't have to be
available on the same host, but the metaserver.cache file must be available
(see comments on the meta server).
TelGGZ should be invoked over inetd on port 15688. This allows to connect to
any GGZ server from all over the world, whereever one finds a telnet client.

@section The GGZ Chat Bot (grubby)

Grubby comes with its own manuals, including an administrator's manual and a
user's manual, as part of the GGZ documentation package.
While grubby can also run client-side (as it is in fact a GGZ client), it makes
much more sense to have it running permanently on the server side to take
advantage of its facilities like logging or memorizing things.

@node GGZ Server Tools, Server Maintaining, Other GGZ Servers, Top
@chapter GGZ Server Tools
@c @cindex Index entry for Sixth Chapter

@section The ggz-cmd command line utily

Admins are allowed to broadcast messages to all rooms via the /wall command.
To do that from the command line, for example to announce that a server will go
down in a few minutes, the utily ggz-cmd can be used.
It is available from the utils/cmd-client directory.

@section The ggzduedit command line utily

If you want to lookup the registered players, you can do so very easily using
the ggzduedit tool. This allows you to retrieve the passwords of the registered
players, and to add or delete them manually.
It is also very helpful for debugging.
If any user should get admin privileges on the server, then this can be
adjusted using ggzduedit as well.

@node Server Maintaining, (dir), GGZ Server Tools, Top
@chapter Server Maintaining
@c @cindex Index entry for Seventh Chapter

@section Security

A game server should, like all other remote services, never be a security risk.
A few rules should be applied to every installation:

@itemize @bullet
@item Never run ggzd as root, it will refuse to do so anyway. However, when
started as root it will try to change to the configured user and group first,
which is normally games.games. Care should be taken about the directory where
it places its dynamic data - this should ideally be created by the installation
script.
@item Don't install unnecessary extra servers on the host where ggzd runs. Game
servers are very often the target of people trying to break into the system,
and be it because they're frustrated by having lost a game.
@item At a maximum, a full GGZ server needs to have the ports 5688, 15688 and
15689 open.
@end itemize

@section Privacy

Everyone hosting GGZ servers can freely decide what policy he uses for player
data such as passwords or contact email addresses. However, to make thing
easier for many people, the GGZ Development Team has started to maintain a
document with some recommandations. This will maybe be part of this document in
a later edition.

@section Technical issues

From time to time a host running a GGZ server should be checked. The list of
processes should look normal (barring any zombie ggzd child processes), the
player database should be intact, and the transmitted network data, consisting
mostly of the session protocol, chat texts and game data, should be checked for
flooding or similar.

@appendix Local GGZ server installation

These instructions apply to a vanilla 0.0.5 installation if one doesn't have
system privileges.
You may have to modify some details though.

@verbatim
cd ~
mkdir localsys
mkdir localsys/usr
mkdir localsys/etc
mkdir ggz-0.0.5
cd ggz-0.0.5
export CVSROOT=:pserver:anonymous \
	@cvs.ggz.sourceforge.net:/cvsroot/ggz
cvs login
cvs -z3 co -rGGZ_0_0_5_RELEASE libggz ggzd
cd libggz
./autogen.sh --prefix=$HOME/localsys/usr
make
make install
cd ..
cd ggzd
export LD_RUN_PATH=$HOME/localsys/usr/lib
export LD_LIBRARY_PATH=$LD_RUN_PATH
./autogen.sh --prefix=$HOME/localsys/usr \
	--with-database=db3 --with-libggz-dir=$HOME/localsys/usr
make
make install
cd ..
export PATH="$HOME/localsys/usr:$PATH"
ggzd
@end verbatim

@appendix Known GGZ servers and Contact

The following servers are known to run permanently. For an up-to-date list,
please consult the GGZ meta server, using one of the available client-side
tools.

@itemize @bullet
@item @url{ggz://jzaun.com} (USA, developers, medium connection)
@item @url{ggz://ggz.snafu.de} (Germany, fast connection)
@item @url{ggz://ggz.morat.net} (USA, fast connection)
@item @url{ggz://ggz.homeip.net} (Argentina, medium connection)
@item @url{ggz://mindx.dyndns.org} (Germany, medium connection)
@end itemize

There are so far no known web pages or similar efforts. For more information,
don't forget to check the GGZ home page regularly:

@url{http://ggz.sourceforge.net}

Server hosters are encouraged to subscribe to the ggz-servers mailing list.
New servers are announced there, as are updates and hosting problems.
This is a low traffic mailing list.

@url{http://lists.sourceforge.net/lists/listinfo/ggz-servers}

@c @printindex cp

@contents
@bye


